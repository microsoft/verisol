// SPDX-License-Identifier: MIT
/* Code generated by compiler */

pragma solidity >=0.5.0 <0.7.0;


contract Test
{
    receive() external payable {}
    bool _lock_ = false;

    modifier isUnlocked () {
        require (_lock_ == false);
        _;
    }


    function foo (bytes memory b) public isUnlocked returns (bytes32 ret) {
        ret = keccak256(b);
        return ret;
    }

    function bar (bytes memory b) public isUnlocked {
        bytes32 local_var = sha256(b);
        return;
    }
}